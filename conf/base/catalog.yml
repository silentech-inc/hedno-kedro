# Raw Datasets

raw_consumptions_test:
  filepath: data/01_raw/Consumptions_TEST.csv
  load_args:
    date_format: "%Y-%m-%d"
    dtype: {"BS_RATE": "string"}
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    parse_dates:
      - "MEASUREMENT_DATE"
    sep: "|"
  type: pandas.CSVDataSet

raw_consumptions_train:
  filepath: data/01_raw/Consumptions_TRAIN.csv
  load_args:
    date_format: "%Y-%m-%d"
    dtype: {"BS_RATE": "string"}
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    parse_dates:
      - "MEASUREMENT_DATE"
    sep: "|"
  type: pandas.CSVDataSet

raw_exceptions:
  filepath: data/01_raw/test_exceptions.csv
  load_args:
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    sep: "|"
  type: pandas.CSVDataSet

raw_powers:
  filepath: data/01_raw/PARNO.csv
  load_args:
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    sep: "|"
  type: pandas.CSVDataSet

raw_powerthefts:
  filepath: data/01_raw/PowerThefts_TRAIN.csv
  load_args:
    date_format: "%Y-%m-%d"

    #XXX Only file without easy PyArrow support.
    #dtype_backend:

    encoding: "utf8"

    #NOTE: "pyarrow" engine fills NULLs in string columns with empty strings.
    #engine:

    header: 0
    parse_dates:
      - "HMANAF"
    sep: "|"
  type: pandas.CSVDataSet

raw_rates:
  filepath: data/01_raw/BS_RATE.csv
  load_args:
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    sep: "|"
  type: pandas.CSVDataSet

raw_records_test:
  filepath: data/01_raw/Records_TEST.csv
  load_args:
    dtype: {"PARNO": "string", "XRHSH": "string"}
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    sep: "|"
  type: pandas.CSVDataSet

raw_records_train:
  filepath: data/01_raw/Records_TRAIN.csv
  load_args:
    dtype: {"PARNO": "string", "XRHSH": "string"}
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    sep: "|"
  type: pandas.CSVDataSet

raw_representations_test:
  filepath: data/01_raw/Representations_TEST.csv
  load_args:
    date_format: "%Y-%m-%d"
    dtype_backend: "pyarrow"
    encoding: "utf8"

    #NOTE: "pyarrow" engine fills NULLs in string columns with empty strings.
    engine: "c"

    header: 0
    parse_dates:
      - "END_DATE"
      - "START_DATE"
    sep: "|"
  type: pandas.CSVDataSet

raw_representations_train:
  filepath: data/01_raw/Representations_TRAIN.csv
  load_args:
    date_format: "%Y-%m-%d"
    dtype_backend: "pyarrow"
    encoding: "utf8"

    #NOTE: "pyarrow" engine fills NULLs in string columns with empty strings.
    engine: "c"

    header: 0
    parse_dates:
      - "END_DATE"

    # START_DATE contains errors which need to be hotfixed before parse.
    #  - "START_DATE"

    sep: "|"
  type: pandas.CSVDataSet

raw_requests_test:
  filepath: data/01_raw/Requests_TEST.csv
  load_args:
    date_format: "%Y-%m-%d"
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    false_values:
      - "incompl"
    header: 0
    parse_dates:
      - "COMPLETION_DATE"
      - "REQUEST_DATE"
    sep: "|"
    true_values:
      - "compl"
  type: pandas.CSVDataSet

raw_requests_train:
  filepath: data/01_raw/Requests_TRAIN.csv
  load_args:
    date_format: "%Y-%m-%d"
    dtype_backend: "pyarrow"
    false_values:
      - "incompl"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    parse_dates:
      - "COMPLETION_DATE"
      - "REQUEST_DATE"
    sep: "|"
    true_values:
      - "compl"
  type: pandas.CSVDataSet

raw_suppliers:
  filepath: data/01_raw/SUPPLIER.csv
  load_args:
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    sep: "|"
  type: pandas.CSVDataSet

raw_tests:
  filepath: data/01_raw/Successors_TEST.csv
  load_args:
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    sep: "|"
  type: pandas.CSVDataSet

raw_uses:
  filepath: data/01_raw/XRHSH.csv
  load_args:
    dtype_backend: "pyarrow"
    encoding: "utf8"
    engine: "pyarrow"
    header: 0
    sep: "|"
  type: pandas.CSVDataSet


# Factored Datasets

factored_consumptions:
  filepath: data/02_intermediate/factored_consumptions.feather
  load_args:
    dtype_backend: "pyarrow"
  type: pandas.FeatherDataSet

factored_locations:
  filepath: data/02_intermediate/factored_locations.feather
  load_args:
    dtype_backend: "pyarrow"
  type: pandas.FeatherDataSet

factored_powerthefts:
  filepath: data/02_intermediate/factored_powerthefts.feather
  load_args:
    dtype_backend: "pyarrow"
  type: pandas.FeatherDataSet

factored_records:
  filepath: data/02_intermediate/factored_records.feather
  load_args:
    dtype_backend: "pyarrow"
  type: pandas.FeatherDataSet

factored_representations:
  filepath: data/02_intermediate/factored_representations.feather
  load_args:
    dtype_backend: "pyarrow"
  type: pandas.FeatherDataSet

factored_requests:
  filepath: data/02_intermediate/factored_requests.feather
  load_args:
    dtype_backend: "pyarrow"
  type: pandas.FeatherDataSet


# Primary Datasets

accounts:
  filepath: data/03_primary/accounts.feather
  type: pandas.FeatherDataSet

meters:
  filepath: data/03_primary/meters.feather
  type: pandas.FeatherDataSet

methods:
  filepath: data/03_primary/methods.feather
  type: pandas.FeatherDataSet

places:
  filepath: data/03_primary/places.feather
  type: pandas.FeatherDataSet

powers:
  filepath: data/03_primary/powers.feather
  type: pandas.FeatherDataSet

rates:
  filepath: data/03_primary/rates.feather
  type: pandas.FeatherDataSet

suppliers:
  filepath: data/03_primary/suppliers.feather
  type: pandas.FeatherDataSet

tests:
  filepath: data/03_primary/tests.feather
  type: pandas.FeatherDataSet

uses:
  filepath: data/03_primary/uses.feather
  type: pandas.FeatherDataSet
